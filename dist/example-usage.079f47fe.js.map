{"version":3,"sources":["src/CoAnMoPluginCliV1.ts","src/example-usage.ts"],"names":[],"mappings":";AAKa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,uBAAA,EAAb,IAAA,EAAA,WAKE,SAAA,EACE,EACA,EACA,GAHF,IAAA,EAAA,KAFQ,KAAA,QAAoB,GAOrB,KAAA,OAAS,EAAI,cAAc,GAC3B,KAAA,QAAU,EAAI,cAAc,GAC5B,KAAA,IAAI,uBAEL,KAAK,QACP,KAAK,OAAO,iBAAiB,UAAW,SAAC,GACnC,EAAK,QAAsB,UAAZ,EAAI,KAAiB,EAAK,IAAI,EAAK,OAAO,SA2BrE,OAvBE,EAAA,UAAA,WAAA,SAAW,GAAX,IAAA,EAAA,KACE,EAAQ,QAAQ,SAAA,GAAU,OAAA,EAAK,QAAQ,KAAK,MAG9C,EAAA,UAAA,aAAA,WACM,KAAK,QAAQ,KAAK,OAAO,SAG/B,EAAA,UAAA,IAAA,SAAI,GACG,KAAK,UACL,KAAA,QAAQ,WAAa,KAAK,EAC1B,KAAA,QAAQ,OAAO,EAAG,UAGzB,EAAA,UAAA,IAAA,SAAI,GACE,GAAC,KAAK,OAAN,CACE,IAAA,EAAwB,EAAQ,MAAM,KAAK,IAAI,SAAA,GAAQ,OAAA,EAAK,SAA3D,EAAU,EAAA,GACX,GADoB,EAAA,MAAA,GACX,KAAK,QAAQ,KAAK,SAAA,GAAQ,OAAA,EAAK,OAAS,KACnD,IAAC,EAAQ,OAAO,KAAK,IAAI,qBAAqB,EAAU,KACvD,KAAA,IAAI,KAAK,KAAK,OAAO,OACrB,KAAA,OAAO,MAAQ,GACf,KAAA,IAAI,EAAO,QAEpB,EA3CA,GAAa,QAAA,kBAAA;;ACkBb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAvBA,IAAA,EAAA,QAAA,uBAEM,EAAM,IAAI,EAAA,kBACd,2BACA,4BACA,UAGF,EAAI,WAAW,CACb,CACE,KAAM,OACN,GAAE,WACO,MAAA,0BAGX,CACE,KAAM,UACN,GAAE,WACO,MAAA,2BAKb,EAAI","file":"example-usage.079f47fe.js","sourceRoot":"..","sourcesContent":["export interface Action {\n  name: string;\n  fn: () => string;\n}\n\nexport class CoAnMoPluginCliV1 {\n  private $stdin: HTMLInputElement | null;\n  private $stdout: HTMLElement | null;\n  private actions: Action[] = [];\n\n  constructor(\n    stdinSelector: string,\n    stdoutSelector: string,\n    doc: HTMLDocument\n  ) {\n    this.$stdin = doc.querySelector(stdinSelector);\n    this.$stdout = doc.querySelector(stdoutSelector);\n    this.log(\"CoAnMoPluginCliV1()\");\n\n    if (this.$stdin)\n      this.$stdin.addEventListener(\"keydown\", (evt: KeyboardEvent) => {\n        if (this.$stdin && evt.key === \"Enter\") this.run(this.$stdin.value);\n      });\n  }\n\n  addActions(actions: Action[]) {\n    actions.forEach(action => this.actions.push(action));\n  }\n\n  focusOnInput() {\n    if (this.$stdin) this.$stdin.focus();\n  }\n\n  log(message: string) {\n    if (!this.$stdout) return;\n    this.$stdout.innerHTML += `\\n${message}`;\n    this.$stdout.scroll(0, 999999);\n  }\n\n  run(command: string) {\n    if (!this.$stdin) return;\n    const [actionName, ...args] = command.split(\" \").map(part => part.trim());\n    const action = this.actions.find(actn => actn.name === actionName);\n    if (!action) return this.log(`> No such action '${actionName}'`);\n    this.log(`> ${this.$stdin.value}`);\n    this.$stdin.value = \"\";\n    this.log(action.fn());\n  }\n}\n","import { CoAnMoPluginCliV1 } from \"./CoAnMoPluginCliV1\";\n\nconst cli = new CoAnMoPluginCliV1(\n  \".CoAnMoPluginCliV1.stdin\",\n  \".CoAnMoPluginCliV1.stdout\",\n  document\n);\n\ncli.addActions([\n  {\n    name: \"help\",\n    fn() {\n      return \"Hereâ€™s a help message\";\n    }\n  },\n  {\n    name: \"version\",\n    fn() {\n      return \"ExampleCoAnMo v0.1.2\";\n    }\n  }\n]);\n\ncli.focusOnInput();\n"]}