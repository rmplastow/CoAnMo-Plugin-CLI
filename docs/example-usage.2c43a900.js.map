{"version":3,"sources":["src/CoAnMoPluginCliV1.ts","src/example-usage.ts"],"names":[],"mappings":";AAYA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,uBAAA,EAAA,IAAA,EAAA,WAKE,SAAA,EACU,EACA,EACR,EACA,EACA,GALF,IAAA,EAAA,KACU,KAAA,KAAA,EACA,KAAA,QAAA,EAJF,KAAA,QAAqB,GAStB,KAAA,OAAS,EAAI,cAAc,GAC3B,KAAA,QAAU,EAAI,cAAc,GAC5B,KAAA,IAAI,uBAEL,KAAK,QACP,KAAK,OAAO,iBAAiB,UAAW,SAAC,GACnC,EAAK,QAAsB,UAAZ,EAAI,KAAiB,EAAK,IAAI,EAAK,OAAO,SAuCrE,OAnCE,EAAA,UAAA,WAAA,SAAW,GAAX,IAAA,EAAA,KACE,EAAQ,QAAQ,SAAA,GAAU,OAAA,EAAK,QAAQ,KAAK,MAG9C,EAAA,UAAA,aAAA,WACM,KAAK,QAAQ,KAAK,OAAO,SAG/B,EAAA,UAAA,IAAA,SAAI,GACG,KAAK,UACL,KAAA,QAAQ,WAAa,KAAK,EAC1B,KAAA,QAAQ,OAAO,EAAG,UAGzB,EAAA,UAAA,IAAA,SAAI,GACE,GAAC,KAAK,OAAN,CACE,IAAA,EAAwB,EAAQ,OAAO,MAAM,OAA5C,EAAU,EAAA,GAAK,EAAI,EAAA,MAAA,GACpB,EAAe,EAAW,cAC5B,GAAe,KAAf,EAEK,OADF,KAAA,OAAO,MAAQ,GACb,KAAK,IAAI,KAEZ,IAAA,EAAS,KAAK,QAAQ,KAAK,SAAA,GAAQ,OAAA,EAAK,OAAS,IACnD,IAAC,EACH,OAAO,KAAK,IAAI,qBAAqB,EAAY,kBAC9C,KAAA,IAAI,KAAK,KAAK,OAAO,OACrB,KAAA,OAAO,MAAQ,GACf,KAAA,IACH,EAAO,GAAG,EAAM,CACd,QAAS,KAAK,QACd,KAAM,KAAK,KACX,QAAS,KAAK,aAItB,EAzDA,GAAA,QAAA,kBAAA;;ACkCA,aA9CA,IAAA,EAAA,QAAA,uBA8CA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GA5CM,EAAM,IAAI,EAAJ,kBACV,gBACA,QACA,2BACA,4BACA,UAGF,EAAI,WAAW,CACb,CACE,KAAM,OACN,QAAS,uBACT,GAAA,SAAG,EAAgB,GACT,IAAA,EAA2B,EAAI,QAAtB,EAAkB,EAAI,KAAhB,EAAY,EAAI,QACjC,EAAU,EAAQ,OACtB,SAAC,EAAa,GAAoB,YAAjC,IAAA,IAAA,EAAA,GAAiC,KAAK,IAAI,EAAS,EAAO,KAAK,SAChE,GAEE,GAAgB,IAAhB,EAAK,OACP,OAAO,EAAA,CACF,EAAI,IAAI,EAAO,aACf,EAAQ,IACT,SAAC,GACC,MAAA,GAAG,EAAO,KAAK,OAAO,EAAU,EAAG,KAAO,EAAO,WAErD,KAAK,MACL,GAAgB,IAAhB,EAAK,OACP,MAAO,cAAc,EAAK,OAAM,0BAA0B,EAAK,OAC3D,IAAA,EAAe,EAAK,GAAG,cACvB,EAAS,EAAQ,KAAK,SAAA,GAAQ,OAAA,EAAK,OAAS,IAC9C,OAAC,EACK,EAAO,KAAI,KAAK,EAAO,QADb,mBAAmB,EAAY,MAIvD,CACE,KAAM,UACN,QAAS,6BACT,GAAA,SAAG,EAAgB,GAEP,OADgB,EAAI,KAChB,IADY,EAAI,YAMpC,EAAI","file":"example-usage.2c43a900.js","sourceRoot":"..","sourcesContent":["export interface ActionMetaI {\n  actions: ActionI[];\n  name: string;\n  version: string;\n}\n\nexport interface ActionI {\n  name: string;\n  summary: string;\n  fn: (args: string[], meta: ActionMetaI) => string;\n}\n\nexport class CoAnMoPluginCliV1 {\n  private $stdin: HTMLInputElement | null;\n  private $stdout: HTMLElement | null;\n  private actions: ActionI[] = [];\n\n  constructor(\n    private name: string,\n    private version: string,\n    stdinSelector: string,\n    stdoutSelector: string,\n    doc: HTMLDocument\n  ) {\n    this.$stdin = doc.querySelector(stdinSelector);\n    this.$stdout = doc.querySelector(stdoutSelector);\n    this.log(\"CoAnMoPluginCliV1()\");\n\n    if (this.$stdin)\n      this.$stdin.addEventListener(\"keydown\", (evt: KeyboardEvent) => {\n        if (this.$stdin && evt.key === \"Enter\") this.run(this.$stdin.value);\n      });\n  }\n\n  addActions(actions: ActionI[]) {\n    actions.forEach(action => this.actions.push(action));\n  }\n\n  focusOnInput() {\n    if (this.$stdin) this.$stdin.focus();\n  }\n\n  log(message: string) {\n    if (!this.$stdout) return;\n    this.$stdout.innerHTML += `\\n${message}`;\n    this.$stdout.scroll(0, 999999);\n  }\n\n  run(command: string) {\n    if (!this.$stdin) return;\n    const [actionName, ...args] = command.trim().split(/\\s+/);\n    const actionNameLc = actionName.toLowerCase(); // because, iPad keyboard\n    if (actionName === \"\") {\n      this.$stdin.value = \"\";\n      return this.log(\">\");\n    }\n    const action = this.actions.find(actn => actn.name === actionNameLc);\n    if (!action)\n      return this.log(`> No such action '${actionNameLc}' - try 'help'`);\n    this.log(`> ${this.$stdin.value}`);\n    this.$stdin.value = \"\";\n    this.log(\n      action.fn(args, {\n        actions: this.actions,\n        name: this.name,\n        version: this.version\n      })\n    );\n  }\n}\n","import { ActionI, ActionMetaI, CoAnMoPluginCliV1 } from \"./CoAnMoPluginCliV1\";\n\nconst cli = new CoAnMoPluginCliV1(\n  \"ExampleCoAnMo\",\n  \"1.2.3\",\n  \".CoAnMoPluginCliV1.stdin\",\n  \".CoAnMoPluginCliV1.stdout\",\n  document\n);\n\ncli.addActions([\n  {\n    name: \"help\",\n    summary: \"Shows a help message\",\n    fn(args: string[], meta: ActionMetaI) {\n      const { actions, name, version } = meta;\n      const longest = actions.reduce(\n        (longest = 0, action: ActionI) => Math.max(longest, action.name.length),\n        0\n      );\n      if (args.length === 0)\n        return [\n          `${name} ${version} Actions:`,\n          ...actions.map(\n            (action: ActionI) =>\n              `${action.name.padEnd(longest + 2, \" \")}${action.summary}`\n          )\n        ].join(\"\\n\");\n      if (args.length !== 1)\n        return `'help' got ${args.length} args, expected 0 or 1 ${args.join()}`;\n      const actionNameLc = args[0].toLowerCase();\n      const action = actions.find(actn => actn.name === actionNameLc);\n      if (!action) return `No such action '${actionNameLc}'`;\n      return `${action.name}  ${action.summary}`;\n    }\n  },\n  {\n    name: \"version\",\n    summary: \"Shows the CoAnMoâ€™s version\",\n    fn(args: string[], meta: ActionMetaI) {\n      const { name, version } = meta;\n      return `${name} ${version}`;\n    }\n  }\n]);\n\ncli.focusOnInput();\n"]}