{"version":3,"sources":["package.json","src/CoAnMoPluginCli.ts","src/Actions/help.ts","src/Actions/hue.ts","src/Actions/version.ts","src/Actions/actions.ts","src/example-usage.ts"],"names":["module","exports","name","version","description","main","type","scripts","start","build","dependencies","devDependencies","typescript","keywords","homepage","repository","url"],"mappings":"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","file":"example-usage.922d62b0.js","sourceRoot":"..","sourcesContent":["module.exports={name:\"coanmo-plugin-cli\",version:\"1.1.1\",description:\"A simple command line interface for MultArcService CoAnMo’s\",main:\"dist/CoAnMoPluginCli.js\",type:\"module\",scripts:{start:\"parcel index.html --open\",build:\"rm -rf docs && parcel build -d docs --public-url /CoAnMo-Plugin-CLI/ index.html && rm -rf dist && tsc\"},dependencies:{},devDependencies:{\"parcel-bundler\":\"^1.6.1\",typescript:\"^3.9.6\"},keywords:[],homepage:\"https://codesandbox.io/s/coanmo-plugin-cli-7hnxq\",repository:{type:\"git\",url:\"https://github.com/rmplastow/CoAnMo-Plugin-CLI.git\"}};","import \"./CoAnMoPluginCli.css\";\n\nexport interface ActionMetaI {\n  actions: ActionI[];\n  name: string;\n  version: string;\n}\n\nexport interface ActionI {\n  name: string;\n  summary: string;\n  fn: (args: string[], meta: ActionMetaI) => string;\n}\n\nexport class CoAnMoPluginCli {\n  private $stdin: HTMLInputElement | null;\n  private $stdout: HTMLElement | null;\n  private actions: ActionI[] = [];\n\n  constructor(\n    private name: string,\n    private version: string,\n    stdinSelector: string,\n    stdoutSelector: string,\n    doc: HTMLDocument\n  ) {\n    this.$stdin = doc.querySelector(stdinSelector);\n    this.$stdout = doc.querySelector(stdoutSelector);\n    this.log(`${name} ${version}`);\n\n    if (this.$stdin)\n      this.$stdin.addEventListener(\"keydown\", (evt: KeyboardEvent) => {\n        if (this.$stdin && evt.key === \"Enter\") this.run(this.$stdin.value);\n      });\n  }\n\n  addActions(actions: ActionI[]) {\n    actions.forEach(action => this.actions.push(action));\n  }\n\n  focusOnInput() {\n    if (this.$stdin) this.$stdin.focus();\n  }\n\n  log(message: string) {\n    if (!this.$stdout) return;\n    this.$stdout.innerHTML += `\\n${message}`;\n    this.$stdout.scroll(0, 999999);\n  }\n\n  run(command: string) {\n    if (!this.$stdin) return;\n    this.$stdin.value = \"\";\n    const [actionName, ...args] = command.trim().split(/\\s+/);\n    const actionNameLc = actionName.toLowerCase(); // because, iPad keyboard\n    if (actionName === \"\") return this.log(\">\");\n    const action = this.actions.find(actn => actn.name === actionNameLc);\n    if (!action)\n      return this.log(`ERROR: No such action '${actionNameLc}' - try 'help'`);\n    this.log(`> ${actionNameLc} ${args.join(' ')}`);\n    this.log(\n      action.fn(args, {\n        actions: this.actions,\n        name: this.name,\n        version: this.version\n      })\n    );\n  }\n}\n","import { ActionI, ActionMetaI } from \"../CoAnMoPluginCli\";\n\nexport const help: ActionI = {\n  name: \"help\",\n  summary: \"Shows a help message\",\n  fn(args: string[], meta: ActionMetaI) {\n    const { actions, name, version } = meta;\n    const longest = actions.reduce(\n      (longest = 0, action: ActionI) => Math.max(longest, action.name.length),\n      0\n    );\n    if (args.length === 0)\n      return [\n        `${name} ${version} Actions:`,\n        ...actions.map(\n          (action: ActionI) =>\n            `${action.name.padEnd(longest + 2, \" \")}${action.summary}`\n        )\n      ].join(\"\\n\");\n    if (args.length !== 1)\n      return `ERROR: 'help' expected 0 or 1 args, but got ${args.length}`;\n    const actionNameLc = args[0].toLowerCase();\n    const action = actions.find(actn => actn.name === actionNameLc);\n    if (!action) return `No such action '${actionNameLc}'`;\n    return `${action.name}  ${action.summary}`;\n  }\n};\n","import { ActionI, ActionMetaI } from \"../CoAnMoPluginCli\";\n\nexport enum Hue {\n  red = \"red\",\n  orange = \"orange\",\n  yellow = \"yellow\",\n  green = \"green\",\n  cyan = \"cyan\",\n  blue = \"blue\",\n  magenta = \"magenta\",\n  grey = \"grey\"\n}\n\nexport function stringToHue(string: string): Hue | void {\n  switch (string) {\n    case \"red\":\n      return Hue.red;\n    case \"orange\":\n      return Hue.orange;\n    case \"yellow\":\n      return Hue.yellow;\n    case \"green\":\n      return Hue.green;\n    case \"cyan\":\n      return Hue.cyan;\n    case \"blue\":\n      return Hue.blue;\n    case \"magenta\":\n      return Hue.magenta;\n    case \"grey\":\n      return Hue.grey;\n    default:\n      return undefined;\n  }\n}\n\nexport function getCurrentHue(doc: Document): Hue {\n  const hueClass = doc.body.className\n    .split(/\\s+/)\n    .find(className => className.slice(0, 4) === \"hue-\");\n  if (!hueClass) return Hue.blue; // `undefined` defaults to blue, if not found\n  const hue = stringToHue(hueClass.slice(4));\n  if (!hue) return Hue.blue; // 'hue-nope' defaults to blue\n  return hue;\n}\n\nexport const hue: ActionI = {\n  name: \"hue\",\n  summary: \"Gets/sets the color scheme\",\n  fn(args: string[], meta: ActionMetaI) {\n    const currentHue = getCurrentHue(document);\n    if (args.length === 0) return `${currentHue}`;\n    if (args.length !== 1)\n      return `ERROR: 'hue' expected 0 or 1 args, but got ${args.length}`;\n    const newHue = stringToHue(args[0]);\n    if (!newHue)\n      return `ERROR: 'hue' got unexpected argument '${args[0]}' — try 'green'`;\n    document.body.classList.remove(`hue-${currentHue}`);\n    document.body.classList.add(`hue-${args[0]}`);\n    return `Was ${currentHue}, now ${args[0]}`;\n  }\n};\n","import { ActionI, ActionMetaI } from \"../CoAnMoPluginCli\";\n\nexport const version: ActionI = {\n  name: \"version\",\n  summary: \"Shows the name and version\",\n  fn(args: string[], meta: ActionMetaI) {\n    const { name, version } = meta;\n    if (args.length !== 0)\n      return `ERROR: 'version' expected 0 args, but got ${args.length}`;\n    return `${name} ${version}`;\n  }\n};\n","import { help } from \"./help\";\nimport { hue } from \"./hue\";\nimport { version } from \"./version\";\n\nexport const actions = [help, hue, version];\n","import \"./example-usage.css\";\nimport { name, version } from \"../package.json\";\nimport { CoAnMoPluginCli } from \"./CoAnMoPluginCli\";\nimport { actions } from \"./Actions/actions\";\n\nconst cli = new CoAnMoPluginCli(\n  name,\n  version,\n  \".stdin\",\n  \".stdout\",\n  document\n);\n\ncli.addActions(actions);\ncli.focusOnInput();\n"]}